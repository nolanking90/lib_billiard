# .github/workflows/build.yml
name: Build

on:
  push:
    branches: [ "main" ]

jobs:  
  FunctionCompile-MacOSX-x86-64:
    strategy: 
        matrix: 
          os: 
            #- windows-latest
            - macOS-latest
          include:
            - os: windows-latest
              ext: dylib
              buildpath: D:\a\billiard\billiard\target\release\libbilliard.dylib
              outputname: billiards-Win.exe
            - os: macOS-latest
              ext: dylib
              buildpath: ./target/release/billiard
              outputname: libbilliard-MacOS.dylib
    runs-on: macos-latest
    env:
      WOLFRAM_SYSTEM_ID: MacOSX-x86-64
      WOLFRAMENGINE_CACHE_KEY: WolframEngine-A
      WOLFRAMENGINE_INSTALLATION_DIRECTORY: "/Applications/Wolfram Engine.app"
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with: 
          shared-key: "cached-deps"

      - name: Cache/restore Wolfram Engine install
        id: cache-restore
        uses: actions/cache@v2
        with:
          path: ${{ env.WOLFRAMENGINE_INSTALLATION_DIRECTORY }}
          key: wolframengine-${{ env.WOLFRAM_SYSTEM_ID }}-${{ env.WOLFRAMENGINE_CACHE_KEY }}

      - name: Install Wolfram Engine
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: |
          echo 'Installing Wolfram Engine...'
          brew install --cask wolfram-engine
          echo 'Installed Wolfram Engine.'

      - name: Compile
        id: compile
        run: cargo build --release
        
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.outputname }}
          path: ${{ matrix.buildpath }}
